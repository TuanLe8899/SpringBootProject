package com.complaint.management.controller;

import java.util.ListIterator;

import javax.validation.Valid;

import org.apache.commons.lang3.RandomStringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.complaint.management.model.MessageDTO;
import com.complaint.management.model.UserDTO;
import com.complaint.management.service.EmailService;
import com.complaint.management.service.UserService;
import com.mifmif.common.regex.Generex;

@Controller
public class UserLoginController {
	
	@Autowired
	EmailService emailService;
	
	@Autowired
	UserService userService;

	@GetMapping("register")
	public String register(Model model) {
		UserDTO user = new UserDTO();
		model.addAttribute("user", user);
		return "register";
	}
	
	@PostMapping("register")
	public String register(@ModelAttribute("user") @Valid UserDTO user,
			BindingResult bindingResult) {
		if(bindingResult.hasErrors()) {
			return "register";
		}
		if(user.getPassword().equals(user.getRepeatPassword())) {
			user.setEnable(true);
			user.setRole("ROLE_ADMIN");
			userService.addUser(user);
			return "redirect:/department/list";
		}
		return "";
	}
	
	@GetMapping("forgot-password")
	public String forgotPassword() {
		return "forgot-password";
	}
	
	@PostMapping("forgot-password")
	public String forgotPassword(@RequestParam("email") String email) {
		Generex generex = new Generex("^(*\\d)(*[a-z])(*[A-Z])(*[a-zA-Z]).{8,12}$");
		System.out.println(generex.random());
		ListIterator<UserDTO> iter = userService.getAllUsers().listIterator();
		while(iter.hasNext()) {
			UserDTO userCheck = iter.next();
			if(userCheck.getUsername().equals(email)) {
				int length = 8;
				boolean useLetters = true;
				boolean useNumbers = true;
				String randomPassword = RandomStringUtils.random(length, useLetters, useNumbers);
				
				MessageDTO message = new MessageDTO();
				message.setFrom("thedog9009@gmail.com");
				message.setTo(email);
				message.setSubject("Get your new password");
				message.setContent("Your new password: Abcxyz123");
				emailService.sendEmail(message);
				return "redirect:/department/list";
			}
		}
		return "forgot-password";
	}
}
